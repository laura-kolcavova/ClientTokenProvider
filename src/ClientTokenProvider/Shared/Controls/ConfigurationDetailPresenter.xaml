<?xml version="1.0" encoding="utf-8" ?>
<ContentView
    x:Class="ClientTokenProvider.Shared.Controls.ConfigurationDetailPresenter"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:azureAdControls="clr-namespace:ClientTokenProvider.AzureAd.Controls"
    xmlns:bussinessModels="clr-namespace:ClientTokenProvider.Business.Shared.Models;assembly=ClientTokenProvider.Business"
    xmlns:sharedControls="clr-namespace:ClientTokenProvider.Shared.Controls"
    xmlns:sharedConverters="clr-namespace:ClientTokenProvider.Shared.Converters"
    xmlns:sharedModels="clr-namespace:ClientTokenProvider.Shared.Models"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    x:Name="this">
    <ContentView.Resources>
        <ResourceDictionary>
            <sharedConverters:ConfigurationNameFallbackConverter x:Key="ConfigurationNameFallbackConverter" />

            <sharedConverters:EnumToStringConverter x:Key="EnumToStringConverter" />

            <toolkit:EnumToBoolConverter x:Key="EnumToBoolConverter" />

            <toolkit:InvertedBoolConverter x:Key="InvertedBoolConverter" />
        </ResourceDictionary>

        <Style Class="requestButton" TargetType="Button">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontAttributes" Value="Bold" />
        </Style>

        <Style Class="configurationNameEntry" TargetType="Entry">
            <Setter Property="FontAttributes" Value="Bold" />
            <Setter Property="MaximumWidthRequest" Value="200" />
        </Style>

        <Style Class="saveButton" TargetType="Button">
            <Setter Property="ImageSource" Value="save_small_grey400.png" />
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Disabled">
                            <VisualState.Setters>
                                <Setter Property="ImageSource" Value="save_small_grey500.png" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="PointerOver" />
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>

        <Style Class="alertWrapper" TargetType="VerticalStackLayout">
            <Setter Property="Spacing" Value="20" />
        </Style>

        <Style Class="alertImage" TargetType="Image">
            <Setter Property="WidthRequest" Value="100" />
        </Style>

        <Style Class="alertMessage" TargetType="Label">
            <Setter Property="HorizontalTextAlignment" Value="Center" />
        </Style>

        <Style Class="errorWrapper" TargetType="Border">

            <Setter Property="BackgroundColor" Value="{StaticResource Danger}" />
            <Setter Property="Stroke" Value="{StaticResource Danger}" />
            <Setter Property="StrokeThickness" Value="1" />
            <Setter Property="StrokeShape" Value=" RoundRectangle 50" />
            <Setter Property="Padding" Value="14,6" />
        </Style>

        <Style Class="errorMessage" TargetType="Label">
            <Setter Property="MaxLines" Value="2" />
            <Setter Property="MaximumWidthRequest" Value="150" />
            <Setter Property="LineBreakMode" Value="TailTruncation" />
        </Style>

        <Style Class="viewErrorDetailLabel" TargetType="Label">
            <Setter Property="TextColor" Value="{StaticResource Orange300}" />
            <Setter Property="FontAttributes" Value="Bold" />
        </Style>

        <Style Class="configurationHeader" TargetType="FlexLayout">
            <Setter Property="Padding" Value="20" />
        </Style>
    </ContentView.Resources>

    <Grid BindingContext="{x:Reference this}" ColumnDefinitions="*, *">
        <Grid Grid.Column="0" RowDefinitions="auto, *, auto">
            <VerticalStackLayout Grid.Column="0" StyleClass="container">
                <FlexLayout>
                    <HorizontalStackLayout FlexLayout.Grow="1" VerticalOptions="Center">
                        <!--  The Mode hast to be set to OneWay because of the converter  -->
                        <Entry
                            Completed="ConfigurationNameEntry_Completed"
                            StyleClass="configurationNameEntry"
                            Text="{Binding ConfigurationDetail.Name, Mode=OneWay, Converter={StaticResource ConfigurationNameFallbackConverter}}"
                            TextChanged="ConfigurationNameEntry_TextChanged"
                            Unfocused="ConfigurationNameEntry_Unfocused" />
                    </HorizontalStackLayout>

                    <HorizontalStackLayout VerticalOptions="Center">
                        <Button
                            Clicked="SaveConfigurationButton_Clicked"
                            IsEnabled="{Binding ConfigurationDetail.CanBeSaved}"
                            StyleClass="textIconButton, saveButton"
                            Text="Save" />
                    </HorizontalStackLayout>
                </FlexLayout>
            </VerticalStackLayout>

            <VerticalStackLayout
                Grid.Row="1"
                toolkit:StateContainer.CanStateChange="{Binding CanStateChange}"
                toolkit:StateContainer.CurrentState="{Binding ConfigurationDetail.Kind, Converter={StaticResource EnumToStringConverter}}">

                <toolkit:StateContainer.StateViews>
                    <azureAdControls:ConfigurationDataForm
                        toolkit:StateView.StateKey="{Binding Source={x:Static bussinessModels:ConfigurationKind.AzureAd}, Converter={StaticResource EnumToStringConverter}}"
                        ConfigurationData="{Binding ConfigurationDetail.Data}"
                        HandleConfigurationDataChangedCommand="{Binding HandleConfigurationDataChangedInternalCommand}" />
                </toolkit:StateContainer.StateViews>

            </VerticalStackLayout>

            <VerticalStackLayout Grid.Row="2" StyleClass="container">
                <Button
                    Clicked="GetAccessTokenButton_Clicked"
                    IsEnabled="{Binding ConfigurationDetail.CanGetAccessToken}"
                    IsVisible="{Binding ConfigurationDetail.IsLoading, Converter={StaticResource InvertedBoolConverter}}"
                    StyleClass="button, btnPrimary, requestButton"
                    Text="Get Access Token" />

                <Button
                    Clicked="GetAccessTokenCancelButton_Clicked"
                    IsVisible="{Binding ConfigurationDetail.IsLoading}"
                    StyleClass="button, btnSecondary, requestButton"
                    Text="Cancel" />
            </VerticalStackLayout>
        </Grid>

        <Grid Grid.Column="2" ColumnDefinitions="1, *">
            <BoxView
                Grid.Column="0"
                Margin="0,0,0,0"
                VerticalOptions="Fill"
                WidthRequest="1"
                Color="{StaticResource Gray600}" />

            <Grid Grid.Column="1" RowDefinitions="auto, *">
                <VerticalStackLayout Grid.Row="0" Padding="20,10">
                    <Label Grid.Row="0" Padding="0,5,0,0">Access token</Label>
                </VerticalStackLayout>

                <Grid
                    Grid.Row="1"
                    Padding="20,10"
                    IsVisible="{Binding ConfigurationDetail.IsLoading}">
                    <VerticalStackLayout StyleClass="alertWrapper" VerticalOptions="Center">
                        <sharedControls:CircularSpinner
                            Enabled="{Binding ConfigurationDetail.IsLoading}"
                            PrimaryColor="{StaticResource Primary}"
                            SecondaryColor="{StaticResource White}"
                            Size="60"
                            Speed="3"
                            Thickness="4" />

                        <Label StyleClass="alertMessage">
                            Sending request ...
                        </Label>
                    </VerticalStackLayout>
                </Grid>

                <Grid
                    Grid.Row="1"
                    Padding="20,10"
                    toolkit:StateContainer.CanStateChange="{Binding CanStateChange}"
                    toolkit:StateContainer.CurrentState="{Binding ConfigurationDetail.AccessTokenResult.State, Converter={StaticResource EnumToStringConverter}}"
                    IsVisible="{Binding ConfigurationDetail.IsLoading, Converter={StaticResource InvertedBoolConverter}}">

                    <toolkit:StateContainer.StateViews>
                        <VerticalStackLayout
                            toolkit:StateView.StateKey="{Binding Source={x:Static sharedModels:AccessTokenResultState.None}, Converter={StaticResource EnumToStringConverter}}"
                            StyleClass="alertWrapper"
                            VerticalOptions="Center">
                            <Image Source="rocket.png" StyleClass="alertImage" />

                            <Label StyleClass="alertMessage">
                                Enter Azure AD configuration and click Get Access Token to get a response
                            </Label>
                        </VerticalStackLayout>

                        <VerticalStackLayout
                            toolkit:StateView.StateKey="{Binding Source={x:Static sharedModels:AccessTokenResultState.Failed}, Converter={StaticResource EnumToStringConverter}}"
                            StyleClass="alertWrapper"
                            VerticalOptions="Center">
                            <Image Source="repair.png" StyleClass="alertImage" />

                            <Label StyleClass="alertMessage">
                                Could not send request
                            </Label>

                            <Border HorizontalOptions="Center" StyleClass="errorWrapper">
                                <FlexLayout>
                                    <Label
                                        Padding="0,0,10,0"
                                        HorizontalTextAlignment="Center"
                                        StyleClass="errorMessage"
                                        VerticalTextAlignment="Center">
                                        <Label.FormattedText>
                                            <FormattedString>
                                                <Span Text="Error: " />
                                                <Span Text="{Binding ConfigurationDetail.AccessTokenResult.ErrorMessage}" />
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>

                                    <Label
                                        Padding="10,0,0,0"
                                        HorizontalTextAlignment="Center"
                                        StyleClass="viewErrorDetailLabel"
                                        Text="View Detail"
                                        VerticalTextAlignment="Center">
                                        <Label.GestureRecognizers>
                                            <TapGestureRecognizer Tapped="AccessTokenErrorLabel_Tapped" />
                                        </Label.GestureRecognizers>
                                    </Label>
                                </FlexLayout>

                            </Border>
                        </VerticalStackLayout>

                        <Grid toolkit:StateView.StateKey="{Binding Source={x:Static sharedModels:AccessTokenResultState.Succeeded}, Converter={StaticResource EnumToStringConverter}}">
                            <sharedControls:JwtVisualizer
                                DecodedJwtToken="{Binding ConfigurationDetail.AccessTokenResult.DecodedToken}"
                                JwtToken="{Binding ConfigurationDetail.AccessTokenResult.Token}"
                                Mode="{Binding ConfigurationDetail.AccessTokenVisualizerMode}" />
                        </Grid>
                    </toolkit:StateContainer.StateViews>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</ContentView>
